- name: Replace .bashrc
  become: false
  copy:
    dest: "{{ ansible_user_dir }}/.bashrc"
    content: |
      # If not running interactively, don't do anything
      case $- in
          *i*) ;;
            *) return;;
      esac

      # don't put duplicate lines or lines starting with space in the history.
      HISTCONTROL=ignoreboth

      # append to the history file, don't overwrite it
      shopt -s histappend

      # for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
      HISTSIZE=1000
      HISTFILESIZE=2000

      # check the window size after each command and, if necessary,
      # update the values of LINES and COLUMNS.
      shopt -s checkwinsize

      # make less more friendly for non-text input files, see lesspipe(1)
      [ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

      # set variable identifying the chroot you work in (used in the prompt below)
      if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
          debian_chroot=$(cat /etc/debian_chroot)
      fi

      # set a fancy prompt (non-color, unless we know we "want" color)
      case "$TERM" in
          xterm-color|*-256color) color_prompt=yes;;
      esac

      if [ "$color_prompt" = yes ]; then
          PS1='${debian_chroot:+($debian_chroot)}\[\033[01;34m\]\h\[\033[00m\] | \[\033[03;36m\]\W\[\033[00m\] \$ '
      else
          PS1='${debian_chroot:+($debian_chroot)}\h:\w\$ '
      fi
      unset color_prompt force_color_prompt

      if [ -x /usr/bin/dircolors ]; then
          test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
          alias ls='ls --color=auto'
          alias la='ls -a --color=auto'
          alias ll='ls -lah --color=auto'
          alias dir='dir --color=auto'
          alias vdir='vdir --color=auto'
          alias grep='grep --color=auto'
          alias fgrep='fgrep --color=auto'
          alias egrep='egrep --color=auto'
      fi

      # Add an "alert" alias for long running commands.
      alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\'')"'

      # enable programmable completion features
      if ! shopt -oq posix; then
        if [ -f /usr/share/bash-completion/bash_completion ]; then
          . /usr/share/bash-completion/bash_completion
        elif [ -f /etc/bash_completion ]; then
          . /etc/bash_completion
        fi
      fi

      # Aliases for SciStream
      alias activate='. ./.activate'
      alias endpoint='globus-compute-endpoint'

      # Mount merrow directly (instead of separate .mnt script)
      sshfs_merrow() {
          if mount | grep -q ~/merrow; then return 0; fi
          echo "Mounting merrow:"
          timeout 10s sshfs seena@merrow:/home/seena/Projects/chameleon ~/merrow -o reconnect,ServerAliveInterval=15,ServerAliveCountMax=3
          if [ $? -eq 0 ]; then
              echo "Mount successful."
          elif [ $? -eq 124 ]; then
              echo "Mount failed: operation timed out."
          else
              echo "Mount failed: check the command or connection."
          fi
      }
      sshfs_merrow

      export PUBLIC_IP=$(curl -s ifconfig.me || echo "no-ip")
      export LOCAL_IP=$(hostname -I | awk '{print $1}')
    mode: '0644'
